import { TPublication } from './publication.types'
import { Publication } from './publication'

export const mockPublicationsData = (): TPublication[] => [
	{ // full data
		id: '1',
		reference: 'ref1',
		title: 'test 1',
		summary: 'a short form summary',
		description: 'a really really long description about this catalogus',
		image: 'https://example.com/image.jpg',
		category: 'category1',
		portal: 'portal1',
		catalogi: 'catalogi1',
		metaData: 'meta1',
		publicationDate: '2024-01-01',
		modified: '2024-01-02',
		featured: true,
		organization: [{ name: 'Org1' }],
		data: [{ key: 'value1' }],
		attachments: [{id: 'e184007c-f5bf-43ab-af15-6c21a8bcb2a1', title: 'Test attachment', summary: 'Mock attachment for testing', description: 'Mock attachment for testing', accessURL: 'https://portaloraccessurl.com', downloadURL: 'https://downloadurl.com', type: 'pdf', anonymization: {anonymized: '?'}, language: {code: '?', level: '?'}, hash: 'testhash', published: '01-01-2024', modified: '01-01-2024', license: 'EUPLA'}],
		attachmentCount: 1,
		schema: 'schema1',
		status: 'status1',
		license: 'MIT',
		themes: 'theme1',
		anonymization: { anonymized: 'yes', results: 'success' },
		language: { code: 'en', level: 'native' },
	},
	{ // partial data
		id: '2',
		reference: 'ref2',
		title: 'test 2',
		summary: 'a short form summary',
		description: 'a really really long description about this catalogus',
		image: 'https://example.com/image.jpg',
		category: 'category2',
		portal: 'portal2',
		catalogi: 'catalogi2',
		metaData: 'meta2',
		publicationDate: '2024-01-01',
		modified: '2024-01-02',
		featured: true,
		organization: [{ name: 'Org1' }],
		data: [{ key: 'value1' }],
		attachments: [{id: 'fd13df8b-4844-41fb-ab4a-d4a7e790cb67', title: 'Test attachment', summary: 'Mock attachment for testing', description: 'Mock attachment for testing', accessURL: 'https://portaloraccessurl.com', downloadURL: 'https://downloadurl.com', type: 'pdf', anonymization: {anonymized: '?'}, language: {code: '?', level: '?'}, hash: 'testhash', published: '01-01-2024', modified: '01-01-2024', license: 'EUPLA'}],
        attachmentCount: 1,
		themes: 'theme1',
		anonymization: { anonymized: 'yes', results: 'success' },
		language: { code: 'en', level: 'native' },
	},
	{ // invalid data
		id: '3',
		reference: 'ref3',
		title: '',
		summary: 'a short form summary',
		description: 'a really really long description about this catalogus',
		image: 'https://example.com/image.jpg',
		category: 'category3',
		portal: 'portal3',
		catalogi: 'catalogi3',
		metaData: 'meta3',
		publicationDate: '2024-01-01',
		modified: '2024-01-02',
		featured: true,
		organization: [{ name: 'Org1' }],
		data: [{ key: 'value1' }],
		attachments: [{id: '252e40d0-80b2-4903-98a5-5dc6fcb8e857', title: 'Test attachment', summary: 'Mock attachment for testing', description: 'Mock attachment for testing', accessURL: 'https://portaloraccessurl.com', downloadURL: 'https://downloadurl.com', type: 'pdf', anonymization: {anonymized: '?'}, language: {code: '?', level: '?'}, hash: 'testhash', published: '01-01-2024', modified: '01-01-2024', license: 'EUPLA'}],
		attachmentCount: 1,
		schema: 'schema1',
		status: 'status1',
		license: 'MIT',
		themes: 'theme1',
		anonymization: { anonymized: 'yes', results: 'success' },
		language: { code: 'en', level: 'native' },
	},]

export const mockPublications = (data: TPublication[] = mockPublicationsData()): TPublication[] => data.map(item => new Publication(item))
